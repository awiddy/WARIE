#Data Simulation

#Packages to be installed: “random”, “randomNames”, "zipcodes"

#Library Statements  ## Change to require
# install.packages("zipcode")
# install.packages("randomNames")
# install.packages("stringr")
# install.packages("password")
#install.packages("openintro")  #for function state2abbr
require(openintro)
require(zipcode)
#library(random)
require(randomNames)
require(stringr)
require(password)

#########################################################################################################

##Number of users## Only change the number of lessees
num_lessees = 5000 #total number of lessees generated
num_warehouses = num_lessees *0.5 #total number of warehouses generated
num_owners = num_warehouses*0.75 #total number of owners generated


#Lessee Sim
lessee_id <- sprintf('%0.5d', 1:num_lessees)
lessee_pw <- replicate(num_lessees,password(n = 10, numbers = TRUE, case = TRUE, special = c("?", "!", "&", "%", "$")))
lessee_first<- randomNames(num_lessees,which.names="first")
lessee_last <- randomNames(num_lessees,which.names="last")
lessee_f_init <- str_sub(lessee_first,1,1)
lessee_username <- lessee_username <- paste(lessee_f_init,lessee_last, sep="")
lessee_username <- str_to_lower(lessee_username)
lesseeDF = data.frame(ID = lessee_id, firstName = lessee_first, lastName = lessee_last, Username = lessee_username, Password = lessee_pw)
colnames(lesseeDF) <- c("ID","First Name","Last Name","Username", "Password") ##May need to add average rating


#Owner Siml
owner_id <- sprintf('%0.5d',1:num_owners)
owner_pw <- replicate(num_owners,password(n = 10, numbers = TRUE, case = TRUE, special = c("?", "!", "&", "%", "$")))
owner_first <- randomNames(num_owners,which.names="first")
owner_last <- randomNames(num_owners,which.names="last")
owner_f_init <- str_sub(owner_first,1,1)
owner_username <- paste(owner_f_init,owner_last, sep="")
owner_username <- str_to_lower(owner_username)
owner_email_end <- sample(c("@gmail.com","@yahoo.com"), size = num_warehouses, replace = T, prob = c(0.5,0.5))
owner_email <- paste(owner_username,owner_email_end,sep="")

ownerDF = data.frame(ID = owner_id, firstName = owner_first, lastName = owner_last, Username = owner_username, Password = owner_pw)
colnames(ownerDF) <- c("ID","First name", "Last Name","Username","Password")  ##May need to add average rating

##Warehouse Sim
n_Cities_sample <- 15 #The top 'n' cities population wise
big_cities <- read.csv(file= 'pop_data.csv', header = FALSE) #csv: Population is 2017 US Census, Pulled from Wikepedia, where the data is linked to factfinder.census.gov
big_cities <- big_cities[,-c(5:10)]  #removes extra census information (i.e. other years, lat. long., etc.)
big_cities <- big_cities[-c(n_Cities_sample+1:311),] # removes additional rows of cities after the top n cities
colnames(big_cities) <- c("Rank", "City", "State", "Population")  #applies column names
big_cities[,3] <- state2abbr(big_cities[,3])


warehouse_id <- sprintf('%0.5d', 1:num_warehouses)   ##changed num_lessees to num_warehouses
storage_capactity <- rnorm(n = num_warehouses,mean = 55000, sd =15000)  # the range of our storage capacity
storage_type <- sample(c(1:4), size = num_warehouses, replace = T, prob = c(0.6,0.3,0.05,0.05))#1=no temp control, 2=climate controlled, 3=refrigerated, 4=frozen
data("zipcode")
warehouse_loc <- data.frame(zipcode) #loads zip codes into a list
warehouse_loc <- warehouse_loc[-c(1, 2, 3, 4, 5, 6), ] #deletes rows from zipslists that have zipcodes that no longer exist
warehouse_loc <- warehouse_loc[(warehouse_loc$city %in% big_cities$City),]
warehouse_loc <- warehouse_loc[sample(nrow(warehouse_loc),size = num_warehouses, replace = T), ] #randomly selects locations for num_warehouses amount of warehouses
warehouseDF = data.frame(warehouse_id, storage_capactity, storage_type, warehouse_loc) #combines warehouse information into a dataframe
colnames(warehouseDF) <- c("ID","Storage Capacity", "Storage Type", "Zipcode", "City", "State", "Latitude", "Longitude")


#Contract Generate 
lessee_rating <- sample(c(1:5), size = num_lessees, replace = T, prob = c(0.1,0.2,0.3,0.3,0.1)) 
owner_rating <- sample(c(1:5),size = num_owners, replace = T, prob = c(0.1,0.2,0.3,0.3,0.1))


##########################################################################################################

# #Packages being thought through:
# 'password'



##Old Stuff##

#This one should give emails, and addresses and other additional information
##Package(randNames)
#Function (rand_names)

##use package 'zipcode' to do zipcodes.
