mydb<-dbConnect(MySQL(),user="g1090423",password="marioboys",dbname="g1090423",host = "mydb.ics.purdue.edu")
#QRY<- ('UPDATE Availability
#SET Open_Space = Open_Space -  Contract.Rented_Space
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,2) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,2)')
#dbSendQuery(mydb,QRY)
##UPDATE Availability
#SET Open_Space = Open_Space -  Contract.Rented_Space
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
#UPDATE Availability
#SET Open_Space = Open_Space - (SELECT SUM(C.Rented_Space) FROM Contract C WHERE C.ID = Availability.WarehouseID
# AND Availability.WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
# UPDATE Availability
#  SET Open_Space = Open_Space - (SELECT SUM(C.Rented_Space) FROM Contract C WHERE C.Approval = 1 AND C.ID = Availability.WarehouseID
#                                 AND Availability.WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),C.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),C.`End Date`)/7,0))
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
Avail<- fetch(dbSendQuery(mydb,'SELECT WarehouseID AS WarehouseID, WeekFromDate AS WeekFromDate,Open_Space AS Open_Space FROM Availability'),n=-1)
Contracts<-fetch(dbSendQuery(mydb,'SELECT ID,Warehouse_ID,Rented_Space,`Start Date`,`End Date` FROM Contract WHERE Approval = 1'),n=-1)
all_cons <- dbListConnections(MySQL())
for (con in all_cons)
{
dbDisconnect(con)
}
AvailUpdate<-data.frame()
#AvailUpdate<-data.frame("Warehouse_ID"= integer(),"Rented_Space"= integer(),"WeeksToStart"=integer(),"WeeksToEnd"=integer())
currentDay = Sys.Date()
for(index in 1:nrow(Contracts)){
AvailUpdate<- rbind(AvailUpdate,c(Contracts[index, "Warehouse_ID"],Contracts[index,"Rented_Space"],ceiling((as.Date(Contracts[index,"Start Date"]) - currentDay)/7),ceiling((as.Date(Contracts[index,"End Date"]) - currentDay)/7)))
}
colnames(AvailUpdate)<-c("Warehouse_ID","Rented_Space","WeeksToStart","WeeksToEnd")
#AvailUpdate[AvailUpdate$"Start Date" < 0,"WeeksToStart"]<-0
AvailUpdate[,3]<-sapply(AvailUpdate[,3], function(x) if(x<0)x<-0)
#CurrentTime <- Sys.date()
mydb<-dbConnect(MySQL(),user="g1090423",password="marioboys",dbname="g1090423",host = "mydb.ics.purdue.edu")
#QRY<- ('UPDATE Availability
#SET Open_Space = Open_Space -  Contract.Rented_Space
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,2) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,2)')
#dbSendQuery(mydb,QRY)
##UPDATE Availability
#SET Open_Space = Open_Space -  Contract.Rented_Space
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
#UPDATE Availability
#SET Open_Space = Open_Space - (SELECT SUM(C.Rented_Space) FROM Contract C WHERE C.ID = Availability.WarehouseID
# AND Availability.WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
# UPDATE Availability
#  SET Open_Space = Open_Space - (SELECT SUM(C.Rented_Space) FROM Contract C WHERE C.Approval = 1 AND C.ID = Availability.WarehouseID
#                                 AND Availability.WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),C.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),C.`End Date`)/7,0))
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
Avail<- fetch(dbSendQuery(mydb,'SELECT WarehouseID AS WarehouseID, WeekFromDate AS WeekFromDate,Open_Space AS Open_Space FROM Availability'),n=-1)
Contracts<-fetch(dbSendQuery(mydb,'SELECT ID,Warehouse_ID,Rented_Space,`Start Date`,`End Date` FROM Contract WHERE Approval = 1'),n=-1)
all_cons <- dbListConnections(MySQL())
for (con in all_cons)
{
dbDisconnect(con)
}
AvailUpdate<-data.frame()
#AvailUpdate<-data.frame("Warehouse_ID"= integer(),"Rented_Space"= integer(),"WeeksToStart"=integer(),"WeeksToEnd"=integer())
currentDay = Sys.Date()
for(index in 1:nrow(Contracts)){
AvailUpdate<- rbind(AvailUpdate,c(Contracts[index, "Warehouse_ID"],Contracts[index,"Rented_Space"],ceiling((as.Date(Contracts[index,"Start Date"]) - currentDay)/7),ceiling((as.Date(Contracts[index,"End Date"]) - currentDay)/7)))
}
colnames(AvailUpdate)<-c("Warehouse_ID","Rented_Space","WeeksToStart","WeeksToEnd")
##updates the Availability table to include the rented space from the newly approved contract
#CurrentTime <- Sys.date()
mydb<-dbConnect(MySQL(),user="g1090423",password="marioboys",dbname="g1090423",host = "mydb.ics.purdue.edu")
#QRY<- ('UPDATE Availability
#SET Open_Space = Open_Space -  Contract.Rented_Space
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,2) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,2)')
#dbSendQuery(mydb,QRY)
##UPDATE Availability
#SET Open_Space = Open_Space -  Contract.Rented_Space
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
#UPDATE Availability
#SET Open_Space = Open_Space - (SELECT SUM(C.Rented_Space) FROM Contract C WHERE C.ID = Availability.WarehouseID
# AND Availability.WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
# UPDATE Availability
#  SET Open_Space = Open_Space - (SELECT SUM(C.Rented_Space) FROM Contract C WHERE C.Approval = 1 AND C.ID = Availability.WarehouseID
#                                 AND Availability.WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),C.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),C.`End Date`)/7,0))
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
Avail<- fetch(dbSendQuery(mydb,'SELECT WarehouseID AS WarehouseID, WeekFromDate AS WeekFromDate,Open_Space AS Open_Space FROM Availability'),n=-1)
Contracts<-fetch(dbSendQuery(mydb,'SELECT ID,Warehouse_ID,Rented_Space,`Start Date`,`End Date` FROM Contract WHERE Approval = 1'),n=-1)
all_cons <- dbListConnections(MySQL())
for (con in all_cons)
{
dbDisconnect(con)
}
AvailUpdate<-data.frame()
#AvailUpdate<-data.frame("Warehouse_ID"= integer(),"Rented_Space"= integer(),"WeeksToStart"=integer(),"WeeksToEnd"=integer())
currentDay = Sys.Date()
for(index in 1:nrow(Contracts)){
AvailUpdate<- rbind(AvailUpdate,c(Contracts[index, "Warehouse_ID"],Contracts[index,"Rented_Space"],ceiling((as.Date(Contracts[index,"Start Date"]) - currentDay)/7),ceiling((as.Date(Contracts[index,"End Date"]) - currentDay)/7)))
}
colnames(AvailUpdate)<-c("Warehouse_ID","Rented_Space","WeeksToStart","WeeksToEnd")
#AvailUpdate[AvailUpdate$"Start Date" < 0,"WeeksToStart"]<-0
#AvailUpdate[,3]<-
sapply(AvailUpdate[,3], function(x) if(x<0)x<-0)
View(AvailUpdate)
source('~/UpdateAvail for all the contracts.R')
UpdateAvailability <- function(){
##updates the Availability table to include the rented space from the newly approved contract
#CurrentTime <- Sys.date()
mydb<-dbConnect(MySQL(),user="g1090423",password="marioboys",dbname="g1090423",host = "mydb.ics.purdue.edu")
#QRY<- ('UPDATE Availability
#SET Open_Space = Open_Space -  Contract.Rented_Space
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,2) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,2)')
#dbSendQuery(mydb,QRY)
##UPDATE Availability
#SET Open_Space = Open_Space -  Contract.Rented_Space
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
#UPDATE Availability
#SET Open_Space = Open_Space - (SELECT SUM(C.Rented_Space) FROM Contract C WHERE C.ID = Availability.WarehouseID
# AND Availability.WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
# UPDATE Availability
#  SET Open_Space = Open_Space - (SELECT SUM(C.Rented_Space) FROM Contract C WHERE C.Approval = 1 AND C.ID = Availability.WarehouseID
#                                 AND Availability.WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),C.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),C.`End Date`)/7,0))
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
Avail<- fetch(dbSendQuery(mydb,'SELECT WarehouseID AS WarehouseID, WeekFromDate AS WeekFromDate,Open_Space AS Open_Space FROM Availability'),n=-1)
Contracts<-fetch(dbSendQuery(mydb,'SELECT ID,Warehouse_ID,Rented_Space,`Start Date`,`End Date` FROM Contract WHERE Approval = 1'),n=-1)
all_cons <- dbListConnections(MySQL())
for (con in all_cons)
{
dbDisconnect(con)
}
AvailUpdate<-data.frame()
#AvailUpdate<-data.frame("Warehouse_ID"= integer(),"Rented_Space"= integer(),"WeeksToStart"=integer(),"WeeksToEnd"=integer())
currentDay = Sys.Date()
for(index in 1:nrow(Contracts)){
AvailUpdate<- rbind(AvailUpdate,c(Contracts[index, "Warehouse_ID"],Contracts[index,"Rented_Space"],ceiling((as.Date(Contracts[index,"Start Date"]) - currentDay)/7),ceiling((as.Date(Contracts[index,"End Date"]) - currentDay)/7)))
}
View(AvailUpdate)
##updates the Availability table to include the rented space from the newly approved contract
#CurrentTime <- Sys.date()
mydb<-dbConnect(MySQL(),user="g1090423",password="marioboys",dbname="g1090423",host = "mydb.ics.purdue.edu")
#QRY<- ('UPDATE Availability
#SET Open_Space = Open_Space -  Contract.Rented_Space
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,2) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,2)')
#dbSendQuery(mydb,QRY)
##UPDATE Availability
#SET Open_Space = Open_Space -  Contract.Rented_Space
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
#UPDATE Availability
#SET Open_Space = Open_Space - (SELECT SUM(C.Rented_Space) FROM Contract C WHERE C.ID = Availability.WarehouseID
# AND Availability.WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
# UPDATE Availability
#  SET Open_Space = Open_Space - (SELECT SUM(C.Rented_Space) FROM Contract C WHERE C.Approval = 1 AND C.ID = Availability.WarehouseID
#                                 AND Availability.WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),C.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),C.`End Date`)/7,0))
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
Avail<- fetch(dbSendQuery(mydb,'SELECT WarehouseID AS WarehouseID, WeekFromDate AS WeekFromDate,Open_Space AS Open_Space FROM Availability'),n=-1)
Contracts<-fetch(dbSendQuery(mydb,'SELECT ID,Warehouse_ID,Rented_Space,`Start Date`,`End Date` FROM Contract WHERE Approval = 1'),n=-1)
all_cons <- dbListConnections(MySQL())
for (con in all_cons)
{
dbDisconnect(con)
}
AvailUpdate<-data.frame()
#AvailUpdate<-data.frame("Warehouse_ID"= integer(),"Rented_Space"= integer(),"WeeksToStart"=integer(),"WeeksToEnd"=integer())
currentDay = Sys.Date()
for(index in 1:nrow(Contracts)){
AvailUpdate<- rbind(AvailUpdate,c(Contracts[index, "Warehouse_ID"],Contracts[index,"Rented_Space"],ceiling((as.Date(Contracts[index,"Start Date"]) - currentDay)/7),ceiling((as.Date(Contracts[index,"End Date"]) - currentDay)/7)))
}
colnames(AvailUpdate)<-c("Warehouse_ID","Rented_Space","WeeksToStart","WeeksToEnd")
##updates the Availability table to include the rented space from the newly approved contract
#CurrentTime <- Sys.date()
mydb<-dbConnect(MySQL(),user="g1090423",password="marioboys",dbname="g1090423",host = "mydb.ics.purdue.edu")
#QRY<- ('UPDATE Availability
#SET Open_Space = Open_Space -  Contract.Rented_Space
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,2) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,2)')
#dbSendQuery(mydb,QRY)
##UPDATE Availability
#SET Open_Space = Open_Space -  Contract.Rented_Space
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
#UPDATE Availability
#SET Open_Space = Open_Space - (SELECT SUM(C.Rented_Space) FROM Contract C WHERE C.ID = Availability.WarehouseID
# AND Availability.WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
# UPDATE Availability
#  SET Open_Space = Open_Space - (SELECT SUM(C.Rented_Space) FROM Contract C WHERE C.Approval = 1 AND C.ID = Availability.WarehouseID
#                                 AND Availability.WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),C.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),C.`End Date`)/7,0))
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
Avail<- fetch(dbSendQuery(mydb,'SELECT WarehouseID AS WarehouseID, WeekFromDate AS WeekFromDate,Open_Space AS Open_Space FROM Availability'),n=-1)
Contracts<-fetch(dbSendQuery(mydb,'SELECT ID,Warehouse_ID,Rented_Space,`Start Date`,`End Date` FROM Contract WHERE Approval = 1'),n=-1)
all_cons <- dbListConnections(MySQL())
for (con in all_cons)
{
dbDisconnect(con)
}
AvailUpdate<-data.frame()
#AvailUpdate<-data.frame("Warehouse_ID"= integer(),"Rented_Space"= integer(),"WeeksToStart"=integer(),"WeeksToEnd"=integer())
currentDay = Sys.Date()
for(index in 1:nrow(Contracts)){
AvailUpdate<- rbind(AvailUpdate,c(Contracts[index, "Warehouse_ID"],Contracts[index,"Rented_Space"],ceiling((as.Date(Contracts[index,"Start Date"]) - currentDay)/7),ceiling((as.Date(Contracts[index,"End Date"]) - currentDay)/7)))
}
colnames(AvailUpdate)<-c("Warehouse_ID","Rented_Space","WeeksToStart","WeeksToEnd")
View(AvailUpdate)
##updates the Availability table to include the rented space from the newly approved contract
#CurrentTime <- Sys.date()
mydb<-dbConnect(MySQL(),user="g1090423",password="marioboys",dbname="g1090423",host = "mydb.ics.purdue.edu")
#QRY<- ('UPDATE Availability
#SET Open_Space = Open_Space -  Contract.Rented_Space
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,2) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,2)')
#dbSendQuery(mydb,QRY)
##UPDATE Availability
#SET Open_Space = Open_Space -  Contract.Rented_Space
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
#UPDATE Availability
#SET Open_Space = Open_Space - (SELECT SUM(C.Rented_Space) FROM Contract C WHERE C.ID = Availability.WarehouseID
# AND Availability.WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
# UPDATE Availability
#  SET Open_Space = Open_Space - (SELECT SUM(C.Rented_Space) FROM Contract C WHERE C.Approval = 1 AND C.ID = Availability.WarehouseID
#                                 AND Availability.WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),C.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),C.`End Date`)/7,0))
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
Avail<- fetch(dbSendQuery(mydb,'SELECT WarehouseID AS WarehouseID, WeekFromDate AS WeekFromDate,Open_Space AS Open_Space FROM Availability'),n=-1)
Contracts<-fetch(dbSendQuery(mydb,'SELECT ID,Warehouse_ID,Rented_Space,`Start Date`,`End Date` FROM Contract WHERE Approval = 1'),n=-1)
all_cons <- dbListConnections(MySQL())
for (con in all_cons)
{
dbDisconnect(con)
}
AvailUpdate<-data.frame()
#AvailUpdate<-data.frame("Warehouse_ID"= integer(),"Rented_Space"= integer(),"WeeksToStart"=integer(),"WeeksToEnd"=integer())
currentDay = Sys.Date()
for(index in 1:nrow(Contracts)){
AvailUpdate<- rbind(AvailUpdate,c(Contracts[index, "Warehouse_ID"],Contracts[index,"Rented_Space"],ceiling((as.Date(Contracts[index,"Start Date"]) - currentDay)/7),ceiling((as.Date(Contracts[index,"End Date"]) - currentDay)/7)))
}
colnames(AvailUpdate)<-c("Warehouse_ID","Rented_Space","WeeksToStart","WeeksToEnd")
#AvailUpdate[AvailUpdate$"Start Date" < 0,"WeeksToStart"]<-0
#AvailUpdate[,3]<-
sapply(AvailUpdate[,3], function(x) if(x<0)x<-0)
View(AvailUpdate)
View(AvailUpdate)
mydb<-dbConnect(MySQL(),user="g1090423",password="marioboys",dbname="g1090423",host = "mydb.ics.purdue.edu")
#QRY<- ('UPDATE Availability
#SET Open_Space = Open_Space -  Contract.Rented_Space
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,2) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,2)')
#dbSendQuery(mydb,QRY)
##UPDATE Availability
#SET Open_Space = Open_Space -  Contract.Rented_Space
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
#UPDATE Availability
#SET Open_Space = Open_Space - (SELECT SUM(C.Rented_Space) FROM Contract C WHERE C.ID = Availability.WarehouseID
# AND Availability.WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
# UPDATE Availability
#  SET Open_Space = Open_Space - (SELECT SUM(C.Rented_Space) FROM Contract C WHERE C.Approval = 1 AND C.ID = Availability.WarehouseID
#                                 AND Availability.WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),C.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),C.`End Date`)/7,0))
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
Avail<- fetch(dbSendQuery(mydb,'SELECT WarehouseID AS WarehouseID, WeekFromDate AS WeekFromDate,Open_Space AS Open_Space FROM Availability'),n=-1)
Contracts<-fetch(dbSendQuery(mydb,'SELECT ID,Warehouse_ID,Rented_Space,`Start Date`,`End Date` FROM Contract WHERE Approval = 1'),n=-1)
all_cons <- dbListConnections(MySQL())
for (con in all_cons)
{
dbDisconnect(con)
}
AvailUpdate<-data.frame()
#AvailUpdate<-data.frame("Warehouse_ID"= integer(),"Rented_Space"= integer(),"WeeksToStart"=integer(),"WeeksToEnd"=integer())
currentDay = Sys.Date()
for(index in 1:nrow(Contracts)){
AvailUpdate<- rbind(AvailUpdate,c(Contracts[index, "Warehouse_ID"],Contracts[index,"Rented_Space"],ceiling((as.Date(Contracts[index,"Start Date"]) - currentDay)/7),ceiling((as.Date(Contracts[index,"End Date"]) - currentDay)/7)))
}
colnames(AvailUpdate)<-c("Warehouse_ID","Rented_Space","WeeksToStart","WeeksToEnd")
#AvailUpdate[AvailUpdate$"Start Date" < 0,"WeeksToStart"]<-0
#AvailUpdate[,3]<-
sapply(AvailUpdate[,3], function(x) if(x<=0)x<-0)
source('~/UpdateAvail for all the contracts.R')
Avail<-UpdateAvailability()
mydb<-dbConnect(MySQL(),user="g1090423",password="marioboys",dbname="g1090423",host = "mydb.ics.purdue.edu")
#QRY<- ('UPDATE Availability
#SET Open_Space = Open_Space -  Contract.Rented_Space
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,2) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,2)')
#dbSendQuery(mydb,QRY)
##UPDATE Availability
#SET Open_Space = Open_Space -  Contract.Rented_Space
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
#UPDATE Availability
#SET Open_Space = Open_Space - (SELECT SUM(C.Rented_Space) FROM Contract C WHERE C.ID = Availability.WarehouseID
# AND Availability.WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
# UPDATE Availability
#  SET Open_Space = Open_Space - (SELECT SUM(C.Rented_Space) FROM Contract C WHERE C.Approval = 1 AND C.ID = Availability.WarehouseID
#                                 AND Availability.WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),C.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),C.`End Date`)/7,0))
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
Avail<- fetch(dbSendQuery(mydb,'SELECT WarehouseID AS WarehouseID, WeekFromDate AS WeekFromDate,Open_Space AS Open_Space FROM Availability'),n=-1)
Contracts<-fetch(dbSendQuery(mydb,'SELECT ID,Warehouse_ID,Rented_Space,`Start Date`,`End Date` FROM Contract WHERE Approval = 1'),n=-1)
all_cons <- dbListConnections(MySQL())
for (con in all_cons)
{
dbDisconnect(con)
}
AvailUpdate<-data.frame()
#AvailUpdate<-data.frame("Warehouse_ID"= integer(),"Rented_Space"= integer(),"WeeksToStart"=integer(),"WeeksToEnd"=integer())
currentDay = Sys.Date()
for(index in 1:nrow(Contracts)){
AvailUpdate<- rbind(AvailUpdate,c(Contracts[index, "Warehouse_ID"],Contracts[index,"Rented_Space"],ceiling((as.Date(Contracts[index,"Start Date"]) - currentDay)/7),ceiling((as.Date(Contracts[index,"End Date"]) - currentDay)/7)))
}
colnames(AvailUpdate)<-c("Warehouse_ID","Rented_Space","WeeksToStart","WeeksToEnd")
#AvailUpdate[AvailUpdate$"Start Date" < 0,"WeeksToStart"]<-0
AvailUpdate[,3]<- sapply(AvailUpdate[,3], function(x) if(x<=0)x<-0)
View(AvailUpdate)
source('~/UpdateAvail for all the contracts.R')
Avail<-UpdateAvailability()
View(AvailUpdate)
View(Avail)
View(AvailUpdate)
c(0:10)
nrow(AvailUpdate)
View(AvailUpdate)
c(AvailUpdate[1,"WeeksToStart"]:AvailUpdate[1,"WeeksToEnd"])
source('~/UpdateAvail for all the contracts.R')
Avail<-UpdateAvailability()
View(Avail)
source('~/UpdateAvail for all the contracts.R')
source('~/UpdateAvail for all the contracts.R')
Avail<-UpdateAvailability()
View(Avail)
View(Avail)
source('~/UpdateAvail for all the contracts.R')
Avail<-UpdateAvailability()
View(Avail)
View(Avail)
source('~/UpdateAvail for all the contracts.R')
newdata <- subset(Avail, ((Avail$WarehouseID == ID) & (Avail$WeekFromDate %in% weeknum)), select=c("WarehouseID","WeekFromDate","Open_Space"))
AvailUpdate[10, "Warehouse_ID"]
AvailUpdate[10,"Rented_Space"]
mydb<-dbConnect(MySQL(),user="g1090423",password="marioboys",dbname="g1090423",host = "mydb.ics.purdue.edu")
#QRY<- ('UPDATE Availability
#SET Open_Space = Open_Space -  Contract.Rented_Space
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,2) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,2)')
#dbSendQuery(mydb,QRY)
##UPDATE Availability
#SET Open_Space = Open_Space -  Contract.Rented_Space
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
#UPDATE Availability
#SET Open_Space = Open_Space - (SELECT SUM(C.Rented_Space) FROM Contract C WHERE C.ID = Availability.WarehouseID
# AND Availability.WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
# UPDATE Availability
#  SET Open_Space = Open_Space - (SELECT SUM(C.Rented_Space) FROM Contract C WHERE C.Approval = 1 AND C.ID = Availability.WarehouseID
#                                 AND Availability.WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),C.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),C.`End Date`)/7,0))
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
Avail<- fetch(dbSendQuery(mydb,'SELECT WarehouseID AS WarehouseID, WeekFromDate AS WeekFromDate,Open_Space AS Open_Space FROM Availability'),n=-1)
Contracts<-fetch(dbSendQuery(mydb,'SELECT ID,Warehouse_ID,Rented_Space,`Start Date`,`End Date` FROM Contract WHERE Approval = 1'),n=-1)
all_cons <- dbListConnections(MySQL())
for (con in all_cons)
{
dbDisconnect(con)
}
AvailUpdate<-data.frame()
#AvailUpdate<-data.frame("Warehouse_ID"= integer(),"Rented_Space"= integer(),"WeeksToStart"=integer(),"WeeksToEnd"=integer())
currentDay = Sys.Date()
for(index in 1:nrow(Contracts)){
AvailUpdate<- rbind(AvailUpdate,c(Contracts[index, "Warehouse_ID"],Contracts[index,"Rented_Space"],ceiling((as.Date(Contracts[index,"Start Date"]) - currentDay)/7),ceiling((as.Date(Contracts[index,"End Date"]) - currentDay)/7)))
}
colnames(AvailUpdate)<-c("Warehouse_ID","Rented_Space","WeeksToStart","WeeksToEnd")
#AvailUpdate[AvailUpdate$"Start Date" < 0,"WeeksToStart"]<-0
AvailUpdate[,3]<- sapply(AvailUpdate[,3], function(x) if(x<=0)x<-0)
for(index in 1:nrow(AvailUpdate)){
ID <- AvailUpdate[index, "Warehouse_ID"]
RentedSpace<- AvailUpdate[index,"Rented_Space"]
weekStart<-AvailUpdate[index,"WeeksToStart"]
weekEnd<-AvailUpdate[index,"WeeksToEnd"]
weeknum <- c(weekStart:weekEnd)
#weeknum <- c(AvailUpdate[index,"WeeksToStart"]:AvailUpdate[index,"WeeksToEnd"])
newdata <- subset(Avail, ((Avail$WarehouseID == ID) & (Avail$WeekFromDate %in% weeknum)), select=c("WarehouseID","WeekFromDate","Open_Space"))
Avail<- subset(Avail,((Avail$WarehouseID != ID | !(Avail$WeekFromDate %in% weeknum))), select=c("WarehouseID","WeekFromDate","Open_Space"))
Avail
source('~/UpdateAvail for all the contracts.R')
mydb<-dbConnect(MySQL(),user="g1090423",password="marioboys",dbname="g1090423",host = "mydb.ics.purdue.edu")
#QRY<- ('UPDATE Availability
#SET Open_Space = Open_Space -  Contract.Rented_Space
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,2) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,2)')
#dbSendQuery(mydb,QRY)
##UPDATE Availability
#SET Open_Space = Open_Space -  Contract.Rented_Space
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
#UPDATE Availability
#SET Open_Space = Open_Space - (SELECT SUM(C.Rented_Space) FROM Contract C WHERE C.ID = Availability.WarehouseID
# AND Availability.WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
# UPDATE Availability
#  SET Open_Space = Open_Space - (SELECT SUM(C.Rented_Space) FROM Contract C WHERE C.Approval = 1 AND C.ID = Availability.WarehouseID
#                                 AND Availability.WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),C.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),C.`End Date`)/7,0))
#WHERE WarehouseID = Contract.Warehouse_ID
#AND WeekFromDate BETWEEN ROUND(DATEDIFF(CurDate(),Contract.`Start Date`)/7,0) AND ROUND(DATEDIFF(CurDate(),Contract.`End Date`)/7,0)
Avail<- fetch(dbSendQuery(mydb,'SELECT WarehouseID AS WarehouseID, WeekFromDate AS WeekFromDate,Open_Space AS Open_Space FROM Availability'),n=-1)
Contracts<-fetch(dbSendQuery(mydb,'SELECT ID,Warehouse_ID,Rented_Space,`Start Date`,`End Date` FROM Contract WHERE Approval = 1'),n=-1)
all_cons <- dbListConnections(MySQL())
for (con in all_cons)
{
dbDisconnect(con)
}
AvailUpdate<-data.frame()
#AvailUpdate<-data.frame("Warehouse_ID"= integer(),"Rented_Space"= integer(),"WeeksToStart"=integer(),"WeeksToEnd"=integer())
currentDay = Sys.Date()
for(index in 1:nrow(Contracts)){
AvailUpdate<- rbind(AvailUpdate,c(Contracts[index, "Warehouse_ID"],Contracts[index,"Rented_Space"],ceiling((as.Date(Contracts[index,"Start Date"]) - currentDay)/7),ceiling((as.Date(Contracts[index,"End Date"]) - currentDay)/7)))
}
colnames(AvailUpdate)<-c("Warehouse_ID","Rented_Space","WeeksToStart","WeeksToEnd")
#AvailUpdate[AvailUpdate$"Start Date" < 0,"WeeksToStart"]<-0
AvailUpdate[,3]<- sapply(AvailUpdate[,3], function(x) if(x<=0)x<-0)
for(index in 1:nrow(AvailUpdate)){
ID <- AvailUpdate[index, "Warehouse_ID"]
RentedSpace<- AvailUpdate[index,"Rented_Space"]
weekStart<-AvailUpdate[index,"WeeksToStart"]
weekEnd<-AvailUpdate[index,"WeeksToEnd"]
weeknum <- c(weekStart:weekEnd)
#weeknum <- c(AvailUpdate[index,"WeeksToStart"]:AvailUpdate[index,"WeeksToEnd"])
newdata <- subset(Avail, ((Avail$WarehouseID == ID) & (Avail$WeekFromDate %in% weeknum)), select=c("WarehouseID","WeekFromDate","Open_Space"))
Avail<- subset(Avail,((Avail$WarehouseID != ID | !(Avail$WeekFromDate %in% weeknum))), select=c("WarehouseID","WeekFromDate","Open_Space"))
Avail$WarehouseID
Avail$WeekFromDate %in% c(1:20)
source('~/UpdateAvail for all the contracts.R')
Avail<-UpdateAvailability()
View(Avail)
View(Contracts)
View(warehouseDF)
source('~/UpdateAvail for all the contracts.R')
Avail<-UpdateAvailability()
View(Avail)
?subset
Avail$WarehouseID == 5
(Avail$WarehouseID == 2) || !(Avail$WeekFromDate %in% c(1:15))
(Avail$WarehouseID == 2) | !(Avail$WeekFromDate %in% c(1:15))
!(Avail$WarehouseID == 2) | !(Avail$WeekFromDate %in% c(1:15))
View(Avail)
View(Avail)
(Avail$WarehouseID == 2) & (Avail$WeekFromDate %in% c(1:10))
source('~/UpdateAvail for all the contracts.R')
Avail<-UpdateAvailability()
View(Avail)
View(Avail)
source('~/UpdateAvail for all the contracts.R')
View(Avail)
Avail<-UpdateAvailability()
View(Avail)
source('~/UpdateAvail for all the contracts.R')
Avail<-UpdateAvailability()
source('~/UpdateAvail for all the contracts.R')
Avail<-UpdateAvailability()
source('~/UpdateAvail for all the contracts.R')
Avail<-UpdateAvailability()
Avail[((WarehouseID == 2) && (WeekFromDate %in% c(1:10)))]
Avail[((Avail$WarehouseID == 2) && (Avail$WeekFromDate %in% c(1:10)))]
Avail[((Avail$WarehouseID == 2) && (Avail$WeekFromDate %in% c(1:10))),1:3]
Avail[((Avail$WarehouseID == 2) && (Avail$WeekFromDate %in% c(10:20))),1:3]
Avail[((Avail$WarehouseID == 2) & (Avail$WeekFromDate %in% c(10:20))),1:3]
Avail2<-Avail[-((Avail$WarehouseID == 2) & (Avail$WeekFromDate %in% c(10:20))),1:3]
Avail2<-Avail[-c((Avail$WarehouseID == 2) & (Avail$WeekFromDate %in% c(10:20))),1:3]
Avail2<-Avail[-c((Avail$WarehouseID == 2) && (Avail$WeekFromDate %in% c(10:20))),1:3]
Avail2<-Avail[-c((Avail$WarehouseID == 2) & !(Avail$WeekFromDate %in% c(10:20))),1:3]
Avail2<-Avail[((Avail$WarehouseID == 2) & !(Avail$WeekFromDate %in% c(10:20))),1:3]
Avail2<-Avail[((Avail$WarehouseID == 2) & (Avail$WeekFromDate %in% c(10:20))),1:3]
View(Avail2)
Avail2<-Avail[(!(Avail$WarehouseID == 2) | !(Avail$WeekFromDate %in% c(10:20))),1:3]
View(Avail2)
source('~/UpdateAvail for all the contracts.R')
Avail<-UpdateAvailability()
View(Avail)
View(Avail)
rm(Avail2)
source('~/UpdateAvail for all the contracts.R')
source('~/UpdateAvail for all the contracts.R')
source('~/UpdateAvail for all the contracts.R')
source('~/populating Availability table.R')
source('~/UpdateAvail for all the contracts.R')
UpdateAvailability()
source('~/UpdateAvail for all the contracts.R')
source('//nas01.itap.purdue.edu/puhome/My Documents/GitHub/WARIE/simulation/UpdateAvail for all the contracts.R')
source('//nas01.itap.purdue.edu/puhome/My Documents/GitHub/WARIE/simulation/populating Availability table.R')
source('//nas01.itap.purdue.edu/puhome/My Documents/GitHub/WARIE/simulation/simulation_data.R')
source('//nas01.itap.purdue.edu/puhome/My Documents/GitHub/WARIE/simulation/ContractGen.R')
source('//nas01.itap.purdue.edu/puhome/My Documents/GitHub/WARIE/simulation/simulation_data.R')
source('//nas01.itap.purdue.edu/puhome/My Documents/GitHub/WARIE/simulation/ContractGen.R')
source('//nas01.itap.purdue.edu/puhome/My Documents/GitHub/WARIE/simulation/ContractGen.R')
source('//nas01.itap.purdue.edu/puhome/My Documents/GitHub/WARIE/simulation/ContractGen.R')
source('//nas01.itap.purdue.edu/puhome/My Documents/GitHub/WARIE/simulation/simulation_data.R')
source('//nas01.itap.purdue.edu/puhome/My Documents/GitHub/WARIE/simulation/simulation_data.R')
setwd('\\\\nas01.itap.purdue.edu\\puhome\\My Documents\\GitHub\\WARIE\\simulation')
getwd()
source('//nas01.itap.purdue.edu/puhome/My Documents/GitHub/WARIE/simulation/populating Availability table.R')
source('//nas01.itap.purdue.edu/puhome/My Documents/GitHub/WARIE/simulation/InitiateDatabase.R')
source('//nas01.itap.purdue.edu/puhome/My Documents/GitHub/WARIE/simulation/InitiateDatabase.R')
source('//nas01.itap.purdue.edu/puhome/My Documents/GitHub/WARIE/simulation/populating Availability table.R')
source('//nas01.itap.purdue.edu/puhome/My Documents/GitHub/WARIE/simulation/InitiateDatabase.R')
source('//nas01.itap.purdue.edu/puhome/My Documents/GitHub/WARIE/simulation/InitiateDatabase.R')
InitiateDatabase()
source('//nas01.itap.purdue.edu/puhome/My Documents/GitHub/WARIE/simulation/InitiateDatabase.R')
